{"version":3,"file":"index.ts","sources":["C:\\Users\\Haekal\\Kitameraki\\Project\\contact\\index.ts"],"names":[],"mappings":";;;;;AAAA,sDAA+C;AAC/C,gDAAwB;AACxB,4EAAoD;AACpD,sEAA8C;AAC9C,wEAAkD;AAClD,8DAAqC;AACrC,+BAA4B;AAC5B,4CAAoD;AAEpD,MAAM,GAAG,GAAgB,IAAA,iBAAO,GAAE,CAAC;AACnC,MAAM,IAAI,GAAW,MAAM,CAAC,SAAG,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC;AAEpD,IAAA,kBAAU,GAAE,CAAC;AACb,qEAAqE;AACrE,8GAA8G;AAC9G,GAAG,CAAC,GAAG,CAAC,IAAA,cAAI,GAAE,CAAC,CAAC;AAEhB,oDAAoD;AACpD,4DAA4D;AAC5D,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,IAAI,EAAE,CAAC,CAAC;AAExB,gEAAgE;AAChE,GAAG,CAAC,GAAG,CAAC,iBAAO,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AAEhD,GAAG,CAAC,GAAG,CAAC,qBAAU,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;AACpD,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,oBAAU,CAAC,CAAC;AAClC,GAAG,CAAC,GAAG,CAAC,eAAe,EAAE,0BAAiB,EAAE,uBAAa,CAAC,CAAC;AAC3D,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;IACxB,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,wBAAwB,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;AACpD,CAAC,CAAC,CAAC;AACH,gBAAgB;AAChB,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;IACpB,sBAAsB;IACtB,OAAO,CAAC,GAAG,CAAC,0BAA0B,IAAI,GAAG,CAAC,CAAC;AAEjD,CAAC,CAAC,CAAC","sourcesContent":["import express, { Application } from \"express\";\r\nimport cors from 'cors';\r\nimport ContactRouter from './routers/ContactRouter';\r\nimport AuthRouter from './routers/AuthRouter';\r\nimport Connection from \"./configuration/Database\";\r\nimport bodyParser from \"body-parser\";\r\nimport { Uri } from \"./Uri\";\r\nimport { authenticateToken } from \"./helper/helper\";\r\n\r\nconst app: Application = express();\r\nconst port: number = Number(Uri.serverPort) || 3000;\r\n\r\nConnection();\r\n// CORS is a mechanism to tell the browser, whether a request that is\r\n// dispatched from another web application domain or another origin, to our web application is allowed or not.\r\napp.use(cors());\r\n\r\n// Parse JSON bodies for this app. Make sure you put\r\n// `app.use(express.json())` **before** your route handlers!\r\napp.use(express.json());\r\n\r\n//support parsing of application/x-www-form-urlencoded post data\r\napp.use(express.urlencoded({ extended: true }));\r\n\r\napp.use(bodyParser.urlencoded({ extended: false }));\r\napp.use('/api/auth/', AuthRouter);\r\napp.use('/api/contact/', authenticateToken, ContactRouter);\r\napp.use('*', (req, res) => {\r\n  res.json({ msg: 'no route handler found' }).end();\r\n});\r\n//server running\r\napp.listen(port, () => {\r\n  // await Connection();\r\n  console.log(`Server running at port ${port} `);\r\n\r\n});"]}