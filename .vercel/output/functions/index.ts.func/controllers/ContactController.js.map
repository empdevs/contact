{"version":3,"file":"ContactController.ts","sources":["C:\\Users\\Haekal\\Kitameraki\\Project\\contact\\controllers\\ContactController.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response } from \"express\";\r\nimport { ContactModel, UserModel } from \"../models/Models\";\r\nimport { IContact, IUser } from \"../Types\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n// import { sendNotification, textFormat } from \"../helper/helper\";\r\n\r\ninterface IRequest extends Request {\r\n  accessToken?: string\r\n}\r\n\r\nexport async function getAllData(req: IRequest, res: Response, next: any) {\r\n  try {\r\n    console.log(\"request\", req[\"accessToken\"]);\r\n    // console.log(\"response\", res)\r\n    const data: IContact[] = await ContactModel.find();\r\n    res.send({\r\n      status: 200,\r\n      error: false,\r\n      message: \"Success get data\",\r\n      data: data,\r\n    });\r\n  } catch (error: any) {\r\n    console.log(error);\r\n    res.send({\r\n      status: 400,\r\n      error: true,\r\n      message: error.message\r\n    });\r\n  }\r\n}\r\n\r\nexport async function createData(req: IRequest, res: Response) {\r\n  const data = new ContactModel({ id: uuidv4(), ...req.body });\r\n  // const userId = req.params.userId;\r\n  // const username = req.params.username;\r\n  try {\r\n    const insertData: IContact = await data.save();\r\n    // const message = \"{username} created new contact\";\r\n    // const users: IUser[] = await UserModel.find(\r\n    //   {\r\n    //     id: { $ne: userId }\r\n    //   }\r\n    // );\r\n    // console.log(users);\r\n    // for (const user of users) {\r\n    //   await sendNotification(message, { username: username }, user.id);\r\n    // }\r\n    res.send({\r\n      status: 201,\r\n      error: false,\r\n      message: \"Success create data\",\r\n      data: insertData\r\n    });\r\n  } catch (error: any) {\r\n    res.send({\r\n      status: 401,\r\n      error: true,\r\n      message: error.message\r\n    });\r\n  }\r\n}\r\n\r\n//This function is includes partial update if needed\r\nexport async function updateData(req: IRequest, res: Response) {\r\n\r\n  console.log(req)\r\n  const id = req.params.id\r\n  try {\r\n    await ContactModel.updateOne({ id: id }, { $set: req.body });\r\n    res.send({\r\n      status: 201,\r\n      error: false,\r\n      message: \"Success update data\",\r\n    });\r\n  } catch (error: any) {\r\n    console.log(error);\r\n    res.send({\r\n      status: 401,\r\n      error: true,\r\n      message: error.message\r\n    });\r\n  }\r\n}\r\n\r\nexport async function deleteData(req: IRequest, res: Response) {\r\n  const id = req.params.id\r\n  try {\r\n    await ContactModel.deleteOne({ id: id });\r\n    res.send({\r\n      status: 201,\r\n      error: false,\r\n      message: \"Success delete data\",\r\n    });\r\n  } catch (error: any) {\r\n    console.log(error);\r\n    res.send({\r\n      status: 401,\r\n      error: true,\r\n      message: error.message\r\n    });\r\n  }\r\n}"]}